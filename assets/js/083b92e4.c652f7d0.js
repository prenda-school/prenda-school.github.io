"use strict";(self.webpackChunkprenda_engineering=self.webpackChunkprenda_engineering||[]).push([[734],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(g,i(i({ref:t},l),{},{components:n})):a.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1188:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i="NPM best practices",c={unversionedId:"Practices/npm",id:"Practices/npm",title:"NPM best practices",description:"Node and NPM version management",source:"@site/docs/Practices/npm.md",sourceDirName:"Practices",slug:"/Practices/npm",permalink:"/docs/Practices/npm",draft:!1,editUrl:"https://github.com/prenda-school/prenda-school.github.io/tree/main/docs/Practices/npm.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Prenda: Engineering Team Principles",permalink:"/docs/Practices/how-we-engineer"},next:{title:"Technical Execution Teams Prioritization and Approach",permalink:"/docs/technical-execution-teams"}},p={},s=[{value:"Node and NPM version management",id:"node-and-npm-version-management",level:3},{value:"Package updates",id:"package-updates",level:3},{value:"Meteor Specific Practices",id:"meteor-specific-practices",level:3},{value:"Package update tools",id:"package-update-tools",level:3}],l={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"npm-best-practices"},"NPM best practices"),(0,r.kt)("h3",{id:"node-and-npm-version-management"},"Node and NPM version management"),(0,r.kt)("p",null,"We encourage using a version manager to switch Node and NPM versions between different projects.\nPrendaWorld uses Meteor which is very specific and controlling about when you can update Node, so consistency is important.\nThe main version control software for NPM is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm"},"NVM")," after installation, ",(0,r.kt)("inlineCode",{parentName:"p"},"cd")," into the directory and then run ",(0,r.kt)("inlineCode",{parentName:"p"},"nvm use")," for more information please see their ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm#usage"},"documentation"),"."),(0,r.kt)("p",null,"You can also use ",(0,r.kt)("a",{parentName:"p",href:"https://asdf-vm.com/"},"ASDF")," which is a version manager for multiple languages, including node."),(0,r.kt)("h3",{id:"package-updates"},"Package updates"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We encourage keeping npm packages up to date and using best practices when considering installing packages, updating packages, and removing packages."),(0,r.kt)("li",{parentName:"ul"},"We should use proper ",(0,r.kt)("a",{parentName:"li",href:"https://semver.org/"},"SEMVER")," practices. This includes using your package.json to define what versions of the package are okay to install. We should try to default to only patch updates (with ",(0,r.kt)("inlineCode",{parentName:"li"},"~"),") to minimize accidental updates of minor packages that ",(0,r.kt)("em",{parentName:"li"},"could")," break the application."),(0,r.kt)("li",{parentName:"ul"},"When working in projects like PrendaWorld, if you aren't installing new packages, or planning on changing versions of packages for that release, when installing packages *please use ",(0,r.kt)("inlineCode",{parentName:"li"},"npm ci")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"npm i")," so that the package-lock.json doesn't get updated."),(0,r.kt)("li",{parentName:"ul"},"We encourage seperation of ",(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"package-lock.json")," updates and code updates, the only exception is when using a new package for code you're working on or having to update a package to use a new feature.")),(0,r.kt)("h3",{id:"meteor-specific-practices"},"Meteor Specific Practices"),(0,r.kt)("p",null,"Meteor encourages using an alias for ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install")," for ",(0,r.kt)("em",{parentName:"p"},"reasons")," so when you're running npm commands in prendaworld, you can run them through meteor like so"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"meteor npm install\n")),(0,r.kt)("p",null,"According to the ",(0,r.kt)("a",{parentName:"p",href:"https://forums.meteor.com/t/meteor-npm-install-vs-npm-install/20495/3"},"meteor forum")," this is so that you don't have to have npm installed globally, but since we're using NVM or ASDF, as long as you have the correct version of node and npm when you're in the project, it offers no value."),(0,r.kt)("h3",{id:"package-update-tools"},"Package update tools"),(0,r.kt)("p",null,"As mentioned above, we encourage ",(0,r.kt)("em",{parentName:"p"},"keeping packages up to date"),". There are a couple of interfaces to see what NPM packages are out of date, as well as tools to keep the updates front of mind."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/dylang/npm-check"},"npm-check")," -> an interface for seeing all outdated packages broken out by semver with a mechinism to update\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/raineorshine/npm-check-updates"},"npm-check-updates")," -> similar to npm-check\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dependabot/dependabot-core"},"dependabot")," -> Github owned bot that can create issues, or PR's to update out of date packages"))}u.isMDXComponent=!0}}]);